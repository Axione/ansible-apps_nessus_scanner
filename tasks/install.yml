---
- name: "Check for nessuscli binary"
  ansible.builtin.stat:
    path: "{{ nessus_scanner_bin_path }}/nessuscli"
  changed_when: false
  register: nessuscli_bin

- name: "Install tasks"
  when: not nessuscli_bin.stat.exists or nessus_scanner_force_install|bool
  block:
    - name: "Install requierements"
      ansible.builtin.package:
        name: "python3-pip"
        state: present
        update_cache: true
      register: pkg_result
      retries: 12
      delay: 10
      until: pkg_result is success

    - name: "Install pexpect"
      ansible.builtin.pip:
        name: pexpect
      when:
        - not (ansible_distribution == 'Debian' and ansible_distribution_major_version == "12")
        - not (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == "24")

    - name: "DEBIAN | Install pexpect"
      ansible.builtin.package:
        name: "python3-pexpect"
      register: pkg_result
      retries: 12
      delay: 10
      until: pkg_result is success
      when: (ansible_distribution == 'Debian' and ansible_distribution_major_version == "12") or (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == "24")

    - name: "DEBIAN | Install Nessus deb file"
      ansible.builtin.apt:
        deb: "{{ nessus_scanner_url }}"
      register: pkg_result
      retries: 12
      delay: 10
      until: pkg_result is success
      when: ansible_os_family == 'Debian'

    - name: "REDHAT | Import Nessus gpg key"
      ansible.builtin.rpm_key:
        state: present
        key: "{{ nessus_scanner_rpm_gpg_url }}"
      when: ansible_os_family == 'RedHat'

    - name: "REDHAT | Install nessus rpm"
      ansible.builtin.yum:
        name: "{{ nessus_scanner_url }}"
        #disable_gpg_check: true
        state: present
      register: pkg_result
      retries: 12
      delay: 10
      until: pkg_result is success
      when: ansible_os_family == 'RedHat'

    - name: "Add Nessus user"
      ansible.builtin.expect:
        echo: true
        timeout: 5
        command: "{{ nessus_scanner_bin_path }}/nessuscli adduser"
        responses:
          (.*)Login(.*): "{{ nessus_scanner_user }}"
          (.*)Login password(.*): "{{ nessus_scanner_password }}"
          (.*)Login password (again)(.*): "{{ nessus_scanner_password }}"
          (.*)system administrator(.*): "y"
          (.*)rules set(.*): "\n"
          (.*)ok(.*): "y"

    # /opt/nessus/sbin/nessuscli fix --secure --set proxy=10.1.80.5
    - name: "Add Nessus proxy host"
      ansible.builtin.command: "{{ nessus_scanner_bin_path }}/nessuscli fix --secure --set proxy={{ nessus_scanner_proxy.split(':')[0] }}"
      changed_when: false
      when: nessus_scanner_proxy|length>0

    # /opt/nessus/sbin/nessuscli fix --secure â€“-set proxy_port=80
    - name: "Add Nessus proxy port"
      ansible.builtin.command: "{{ nessus_scanner_bin_path }}/nessuscli fix --secure --set proxy_port={{ nessus_scanner_proxy.split(':')[1] }}"
      changed_when: false
      when: nessus_scanner_proxy|length>0

    # /opt/nessus/sbin/nessuscli fetch --security-center
    - name: "Add Nessus security center"
      ansible.builtin.command: "{{ nessus_scanner_bin_path }}/nessuscli fetch --security-center"
      changed_when: false
      when: nessus_scanner_sec_center|bool

- name: "Start nessus scanner"
  ansible.builtin.service:
    daemon_reload: true
    name: nessusd
    state: started
    enabled: true
